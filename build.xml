<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="default" name="entermedia-rest-java">

	<property name="appname" value="${ant.project.name}"/>
	<property name="org" value="OpenEdit, Inc."/>
	<property name="src" location="${basedir}/src"/>
	<!--property name="testsrc" location="${basedir}/tests"/ -->
	<property name="lib" location="${basedir}/lib"/>
	<property name="etc" location="${basedir}/etc"/>
	<property name="build" location="${basedir}/build"/>
	<property name="zipdir" location="${build}/${appname}"/>
	<property name="doc" location="${basedir}/docs"/>
	<property name="javadoc" location="${build}/api"/>
	
	<!-- 
		========================================================================
		Anthill build server properties.  These properties will be passed in
		by anthill when this script is executed on the build server.
		
			- "version" is set by the version adapter
			- "deployDir" is set by anthill.publish.dir
		========================================================================
	--> 
	<property name="version"  value="dev"/>
	<property name="deployDir" value="deploy"/>
	
	<!-- A convenience variable for documentation output -->
	<property name="versionedApp" value="${appname}-${version}"/>
	
	<property name="jarfile" location="${deployDir}/builds/${versionedApp}.jar"/>
	
	<path id="classpath" >
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${build}"/>
	</path>
	
	<target name="default" depends="clean, compile, jar, javadoc, zip"/>
	<target name="dependency" depends="default"/>
	    

	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${wardir}"/>
	</target>

	<target name="compile">
		<mkdir dir="${build}/compile"/>
		<javac classpathref="classpath" srcdir="${src}" destdir="${build}/compile"
			debug="true">
		</javac>
	</target>

	<target name="jar">
		<mkdir dir="${deployDir}/builds/" />
		<jar jarfile="${jarfile}" basedir="${build}/compile" >
			<exclude name="**/*Test*"/>
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Implementation-Title" value="${appname}"/>
				<attribute name="Implementation-Version" value="${version}"/>
				<attribute name="Implementation-Vendor" value="${org}"/>
			</manifest>
		</jar>
	</target>
    
	<target name="javadoc">
		<delete dir="${javadoc}}"/>
		<mkdir dir="${javadoc}" />
		<javadoc destdir="${javadoc}" access="public" notree="false" 
			nonavbar="false" noindex="false" splitindex="false" author="true" 
			use="false" verbose="false" version="true" nodeprecatedlist="false" 
			nodeprecated="false" doctitle="EnterMedia Clients API">
			<packageset dir="${src}" defaultexcludes="yes">
				<exclude name="com/**/*Test*"/>
				<exclude name="org/**/*Test*"/>
			</packageset>
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javadoc>
	</target>

	<target name="zip" depends="jar">
		<mkdir dir="${zipdir}"/>
		<copy todir="${zipdir}">
			<fileset dir="${basedir}">
				<include name="*.xml"/>
				<include name="*.sh"/>
				<include name=".classpath"/>
				<include name=".project"/>
				<include name="etc/**"/>
				<include name="docs/**"/>
				<include name="src/**"/>
				<exclude name="**/CVS"/>
			</fileset>
		</copy>
		
		<copy todir="${zipdir}/lib">
			<fileset dir="${lib}">
				<include name="*.jar"/>
			</fileset>
			<fileset file="${jarfile}"/>
		</copy>
		
		<copy todir="${zipdir}/docs/api">
			<fileset dir="${javadoc}">
				<include name="**/*.html"/>
			</fileset>
		</copy>

		<zip destfile="${deployDir}/builds/${appname}.zip">
			<fileset dir="${build}">
				<include name="${appname}/**"/>
			</fileset>
		</zip>
	</target>
	
	<target name="run" depends="compile">
		<java classname="com.entermedia.ui.ConsoleClient">
			<classpath>
				<fileset dir="${lib}">
					<include name="*.jar"/>
					<exclude name="entermedia-clients-*.jar"/>
				</fileset>
				<pathelement location="${build}/compile"/>
			</classpath>
			<arg line="${commandline}"/>
		</java>
	</target>
	
	<target name="test" depends="compile">
		<junit haltonfailure="true" showoutput="true" printsummary="true" fork="true" maxmemory="256m">
			<jvmarg value="-Djava.net.preferIPv4Stack=true"/>

			<classpath>
				<fileset dir="${lib}">
					<include name="*.jar"/>
				</fileset>
				<dirset dir="${build}/compile">
					<include name="**"/>
				</dirset>
				<fileset dir="${lib}">
					<include name="*.jar"/>
					<include name="compile/*.jar"/>
				</fileset>
			</classpath>
			<test name="com.entermedia.RestTest" outfile="./junit" todir=".">
				<formatter type="xml"/>
			</test>
		</junit>
	</target>
</project>